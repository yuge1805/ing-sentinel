# 如果有多套网络，又无法正确获取本机IP，则需要使用下面的参数设置当前机器可被外部访问的IP地址，供admin控制台使用
# spring.cloud.sentinel.transport.client-ip=
# 应用服务 WEB 访问端口
server:
  port: 18080
  servlet:
    context-path: /portal

spring:
  application:
    name: portal-server
  config:
    import:
      - nacos:portal-server.yml?refresh=true
  cloud:
    nacos:
      config:
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
      discovery:
        server-addr: localhost:8848
    sentinel:
      # 取消Sentinel控制台懒加载
      # 默认情况下 Sentinel 会在客户端首次调用的时候进行初始化，开始向控制台发送心跳包
      # 配置 sentinel.eager=true 时，取消Sentinel控制台懒加载功能
      eager: true
      # Sentinel 控制台地址
      transport:
        dashboard: localhost:8080
        # 会在机器上启动一个 Http Server，该 Server 会与 Sentinel 控制台做交互。
        # 比如 Sentinel 控制台添加了 1 个限流规则，会把规则数据 push 给这个 Http Server 接收，Http Server 再将规则注册到 Sentinel 中。
        port: 8719
      datasource:
        # 限流
        flow:
          nacos:
            server-addr: localhost:8848
            namespace:
            group-id: SENTINEL_GROUP
            data-id: ${spring.application.name}-flow-rules
            data-type: json
            rule-type: flow
        # 熔断降级
        degrade:
          nacos:
            server-addr: localhost:8848
            namespace:
            group-id: SENTINEL_GROUP
            data-id: ${spring.application.name}-degrade-rules
            data-type: json
            rule-type: degrade




# feign配置
feign:
  sentinel:
    enabled: true

# logging配置
logging:
  level:
    com.alibaba.csp: warn




